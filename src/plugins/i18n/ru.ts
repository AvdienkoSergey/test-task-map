export default {
  hello: "Привет",
  header: {
    title: "Тестовое задание",
    tabs: {
      task: "О задании",
      map: "Карта",
    },
    dropdown: {
      ru: "Русский",
      srCyrl: "Сербский",
      en: "Английский",
    },
  },
  article: {
    title_h1: "Тестовое задание SquareGPS",
    introduction: `Необходимо с помощью Vuejs, Vuex, VueRouter, Vuetify написать приложение. Хэдер
    приложения должен содержать меню из 2-х пунктов: О задании и Карта. В основной
    части приложения должно отображаться содержимое разделов`,
    section_1: {
      title_h2: "Раздел “О задании”",
      content:
        "В разделе должен быть текст этого задания, сверстанный аналогично",
    },
    section_2: {
      title_h2: "Раздел “Карта”",
      content: "На экране должны быть карта и список (см. пример):",
      list: {
        point_1: {
          text: `При клике на кнопку добавления, карта должна перейти в режим добавления
          маркера: в месте клика должен появится маркер, а в списке - запись с адресом
          точки`,
          list: {
            point_a: `Для поиска адреса можно использовать любое бесплатное API для
            геокодирования, например: `,
            point_b: `В случае, если адрес не найден, необходимо вывести ошибку и не
            добавлять маркер в список`,
          },
        },
        point_2: "При клике на маркер должна подсвечиваться запись в списке",
        point_3:
          "При клике на запись в списке карта должна центрироваться на маркере",
        point_4:
          "Маркеры должны храниться локально и не пропадать после перезагрузки страницы",
        point_5: "В адресной строке должен отображаться id выбранного маркера",
      },
      summary: `Локальное хранение данных должно быть организовано в виде сервиса,
      эмулирующего бекенд. (Необходим класс Backend, который псевдо-асинхронно
      сохраняет данные в localStorage)
      `,
    },
    section_3: {
      title_h2: "Дополнительно:",
      list: {
        point_1: `Продумать отображение на мобильных устройствах`,
        point_2: `Предусмотреть локализацию`,
        point_3: `Необходимо с помощью jest написть 1 модульный тест на любой компонент`,
      },
    },
    section_4: {
      text: `Напоминание: тестовое задание призвано показать умение писать хороший
      модульный код, а также умение пользоваться указанными технологиями и не только.
      Этим кодом нужно гордиться.`,
    },
    section_5: {
      text: "Пример:",
    },
  },
  editMode: {
    notification: "Pежим редактирования",
  },
  placemarkers: {
    list: {
      title: "Маркеры",
    },
  },
  notification: {
    addListener:
      "Вы вошли в режим редактирования. Клик по карте добавит маркер",
    errorAddPlacemarker: "Нельзя добавить треубемый маркер",
  },
};
